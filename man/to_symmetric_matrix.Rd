% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_symmetric_matrix.R
\name{to_symmetric_matrix}
\alias{to_symmetric_matrix}
\title{Symmetrize an adjacency matrix}
\usage{
to_symmetric_matrix(
  g,
  rule = c("weak", "mutual", "out", "in", "average", "max", "min"),
  na.rm = TRUE
)
}
\arguments{
\item{g}{input matrix}

\item{rule}{character, which rule to follow when deciding how to symmetrize}

\item{na.rm}{logical, should missing values for the cells be ignored? This is 
used for the rules "average", "max", or "min". For rules "out" and "in", the 
\code{NA} is copied over if it is in a cell that is copied by the rule. 
Under "weak", a \code{NA} is copied if it is in either i->j or j->i and the 
other edges is not 1. Under "mutual", a \code{NA} is copied if it is in 
either i->j or j->i and the other edges is 1.}
}
\value{
symmatrized matrix
}
\description{
Symmetrize an adjacency matrix
}
\details{
Turn a (adjacency) matrix into a symmetric one, according to several 
potential rules.

The diagonal of the matrix remains unaffected.

Rule \code{out}: \code{g} is made symmetric by copying the upper triangle 
onto the lower triangle. 

Rule \code{in}: \code{g} is made symmetric by copying the lower triangle 
onto the upper triangle. 

Rule \code{weak}: every edge is assumed to be reciprocated. Hence, an edge 
from *i* to *j* also becomes an edge from *j* to *i*,
Mathematically: i<->j iff i->j or i<-j (OR rule)

Rule \code{mutual}: every edge is only maintained if it is already reciprocated
in \code{g}. Hence, if an edge from *i* to *j* exist and also from *j* to *i*, 
these edges are maintained in the resulting matrix. Otherwise (for unreciprocated 
edges or null dyads), the resulting matrix will neither contain an edge 
from *i* to *j* nor from *j* to *i*.
Mathematically: i<->j iff i->j and i<-j (AND rule)

Rule \code{average}: the values for the edges (*i*, *j*) and (*j*, *i*) are 
averaged and assigned to both edges in the resulting matrix. This will 
typically result in a non-binary matrix.

Rule \code{max}: edges (*i*, *j*) and (*j*, *i*) are both assigned the highest value 
of the two edges. If input matrix \code{g} is binary, this will yield the 
same result as rule \code{weak}.

Rule \code{min}: edges (*i*, *j*) and (*j*, *i*) are both assigned the lowest value 
of the two edges. If input matrix \code{g} is binary, this will yield the 
same result as rule \code{mutual}.
}
\examples{
m <- matrix(c(0,1,1,0,1,0,0,1,0,0,0,1,0,1,1,1,0,1,0,1,1,0,0,1,0), byrow = TRUE, ncol = 5)#' 
m
to_symmetric_matrix(m, "out")
to_symmetric_matrix(m, "in")
to_symmetric_matrix(m, "weak")
to_symmetric_matrix(m, "mutual")
to_symmetric_matrix(m, "average")
to_symmetric_matrix(m, "max")
to_symmetric_matrix(m, "min")
m[1, 2] <- m[3, 1] <- NA
m
to_symmetric_matrix(m, "out")
to_symmetric_matrix(m, "in")
to_symmetric_matrix(m, "weak")
to_symmetric_matrix(m, "mutual")
to_symmetric_matrix(m, "average")
to_symmetric_matrix(m, "max")
to_symmetric_matrix(m, "min")
}
