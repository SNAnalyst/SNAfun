% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_comm_dendrogram.R
\name{extract_comm_louvain}
\alias{extract_comm_louvain}
\title{Community structure via multi-level optimization of modularity}
\usage{
extract_comm_louvain(x, weights = NA, resolution = 1)
}
\arguments{
\item{x}{The undirected input graph, edge directions are ignored in directed graphs.}

\item{weights}{The weights of the edges. It must be a positive numeric vector, 
\code{NULL} or \code{NA}. If it is \code{NULL} and the input graph has a 
‘weight’ edge attribute, then that attribute will be used. If \code{NULL} and 
no such attribute is present, then the edges will have equal weights. 
Set this to \code{NA} if the graph was a ‘weight’ edge attribute, but you 
don't want to use it for community detection. Larger edge weights increase 
the probability that an edge is selected by the random walker. 
In other words, larger edge weights correspond to stronger connections.}

\item{resolution}{Optional resolution parameter that allows the user to adjust 
the resolution parameter of the modularity function that the algorithm uses 
internally. Lower values typically yield fewer, larger clusters. The original 
definition of modularity is recovered when the resolution parameter is set to 1.}
}
\value{
a \code{communities} object
}
\description{
Extract communities using the Louvain algorithm for undirected graphs.
}
\details{
NOTE: this algorithm only works with undirected graphs.

This function implements the multi-level modularity optimization algorithm for 
finding community structure, also known as the "Louvain" algorithm. 
It is based on the modularity measure and a hierarchical approach.
Initially, each vertex is assigned to a community on its own. In every step, 
vertices are re-assigned to communities in a local, greedy way: each vertex 
is moved to the community with which it achieves the highest contribution to 
modularity. When no vertices can be reassigned, each community is considered 
a vertex on its own, and the process starts again with the merged communities. 
The process stops when there is only a single vertex left or when the 
modularity cannot be increased any more in a step.
}
\references{
this function just wraps the \code{\link[igraph]{cluster_louvain}}
function and documentation.
}
