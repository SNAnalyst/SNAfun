% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/d.R
\name{dli}
\alias{dli}
\alias{d_distance}
\title{Dyad level indices}
\usage{
d_distance(x, mode = c("all", "out", "in"))
}
\arguments{
\item{x}{graph object}

\item{mode}{Character constant, gives whether the shortest paths to or from 
the given vertices should be calculated for directed graphs. If \code{out} 
then the shortest paths from the vertex, if \code{in} then to it will be 
considered. If \code{all}, the default, then the corresponding undirected 
graph will be used, ie. not directed paths are searched. 
This argument is ignored for undirected graphs.}
}
\description{
Dyad level indices
}
\details{
Calculate several dyad level indices.
}
\section{Functions}{
\itemize{
\item \code{d_distance()}: Distance between each pair of vertices in the graph. 
Weights are discarded. The output of this function is a matrix.
Use \code{\link[igraph]{distances}} or \code{\link[sna]{geodist}} if edge 
weights are to be used or specific options are needed.

}}
\examples{
# 
# distance
g <- igraph::make_ring(10)
igraph::distances(g)
d_distance(g)
d_distance(snafun::to_network(g))
igraph::V(g)$name <- LETTERS[1:10]
igraph::distances(g)
d_distance(g)
d_distance(snafun::to_network(g))
}
