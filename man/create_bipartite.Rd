% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create.R
\name{create_bipartite}
\alias{create_bipartite}
\title{Create a random bipartite network}
\usage{
create_bipartite(
  n_type1,
  n_type2,
  strategy = c("gnp", "gnm"),
  p,
  m,
  directed = FALSE,
  mode = c("out", "in", "all"),
  graph = c("igraph", "network")
)
}
\arguments{
\item{n_type1}{integer, number of vertices of the first type}

\item{n_type2}{integer, number of vertices of the first type}

\item{strategy}{Character scalar, the type of the graph, ‘gnp’ creates a 
$G(n,p)$ graph, ‘gnm’ creates a $G(n,m)$ graph. See details below.}

\item{p}{probability for $G(n,p)$ graphs. Should not be given for $G(n,m)$ graphs.}

\item{m}{integer, the number of edges for $G(n,p)$ graphs. Should not be given for $G(n,p)$ graphs.}

\item{directed}{logical, whether to create a directed graph}

\item{mode}{Character scalar, specifies how to direct the edges in directed 
graphs. If it is ‘out’, then directed edges point from bottom vertices to top 
vertices. If it is ‘in’, edges point from top vertices to bottom vertices. 
‘out’ and ‘in’ do not generate mutual edges. 
If this argument is ‘all’, then each edge direction is considered independently 
and mutual edges might be generated. This argument is ignored for undirected graphs.}

\item{graph}{character, the type of graph to be generated: \code{igraph} or 
\code{network}}
}
\value{
a graph of class \code{network} or \code{igraph}
}
\description{
Generate bipartite graphs using the Erdos-Renyi model
}
\details{
Generate a random bipartite network, either as a \code{igraph} or 
\code{network} object.

When using strategy 'gnp', a bipartite network is generated where each edge
has probability 'p' of occuring. This means that consecutive runs of the 
algorithm will usually result in graphs with different numbers of edges. 

When using strategy 'gnm', a bipartite network is generated with exactly 'm' 
edges. This means that consecutive runs of the 
algorithm will result in graphs with the same number of edges (but will occur 
between different vertices). 

The generation is done through the \code{\link[igraph]{sample_bipartite}} 
function.
}
