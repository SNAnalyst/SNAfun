% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_network.R
\name{to_network}
\alias{to_network}
\title{Make network object}
\usage{
to_network(x, bipartite = FALSE)
}
\arguments{
\item{x}{graph data object}

\item{bipartite}{logical, should \code{x} be considered to be bipartite? 
This overrides the function's default choices.}
}
\value{
a \code{network} object
}
\description{
Make a network object from various input types.
}
\details{
The following inputs are supported:
\describe{
\item{\code{network} object}{\code{network} object}
\item{\code{igraph} object}{\code{igraph} object}
\item{\code{matrix}}{This is a base R type \code{matrix}. 
When a matrix is used as input, 
the function the number of rows is equal to the number of columns. 
If they are not, the function assumes the matrix refers to a bipartite network. 
This assumption can be overridden by the \code{bipartite} argument.}
\item{\code{data.frame}}{The \code{data.frame} contains an edge list. 
The data.frame requires the first column to contain the senders and the 
second column contains the receivers. If there are any additional 
columns, these are considered to be edge attributes.

NOTE: The created \code{network} object is considered to be directed. 
If an undirected network is required, run \code{\link[igraph]{as.undirected}} 
on the output from this function.}
}

The argument \code{bipartite} is used to tell the function whether the input 
represents a bipartite network or not. If it does, then set \code{bipartite} 
to \code{TRUE} and the function will attempt to convert the input to a 
bipartite network. 
However, the argument is NOT intended to convert a bipartite network to 
a unipartite network and will NOT do that conversion! 

NOTE: as far as we know, this function is the only function that correctly 
deals with vertex attributes that themselves are lists in the conversion 
from \code{igraph} (which allows lists) to \code{network} (which can not 
deal with lists as attributes).
}
