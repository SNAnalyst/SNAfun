% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mixing_igraph.R
\name{mixing_igraph}
\alias{mixing_igraph}
\title{igraph mixing matrix}
\source{
This is a slightly modified version of the \code{mixingm.igraph} method 
from the \code{isnar} package from \href{https://github.com/mbojan/isnar/blob/master/R/mixingm.R}{isnar}.
}
\usage{
mixing_igraph(
  object,
  rattr,
  cattr = rattr,
  full = FALSE,
  directed = igraph::is.directed(object),
  loops = any(igraph::is.loop(object))
)
}
\arguments{
\item{object}{\code{igraph} object}

\item{rattr}{name of the vertex attribute or an attribute itself as a
vector. If \code{cattr} is not NULL, \code{rattr} is used for rows of the
resulting mixing matrix.}

\item{cattr}{name of the vertex attribute or an attribute itself as a
vector. If supplied, used for columns in the mixing matrix.}

\item{full}{logical, whether two- or three-dimensional mixing matrix
should be returned.}

\item{directed}{logical, whether the network is directed. By default,
directedness of the network is determined with
\code{\link[igraph]{is.directed}}.}

\item{loops}{logical, whether loops are allowed. By default it is TRUE
whenever there is at least one loop in \code{object}.}
}
\value{
Depending on \code{full} argument a table or a list
crossclassifying connected or all dyads in \code{object}.
}
\description{
Create a network mixing matrix for an igraph object.
}
\details{
Network mixing matrix is, traditionally, a two-dimensional
cross-classification of edges depending on the values of a specified vertex
attribute for tie sender and tie receiver. It is an important tool
for assessing network homophily or segregation.

Let \eqn{G} be the number of distinct values of the vertex attribute in
question.  We may say that we have \eqn{G} mutually exclusive groups in the
network.  The mixing matrix is a \eqn{G \times G}{GxG} matrix such that
\eqn{m_{ij}}{m[ij]} is the number of ties send by vertices in group \eqn{i}
to vertices in group \eqn{j}. The diagonal of that matrix is of special
interest as, say, \eqn{m_{ii}}{m[ii]} is the number of ties \emph{within}
group \eqn{i}.

A full mixing matrix is a list that cross-classifies
\emph{all} network \emph{dyads} depending on:
\enumerate{
\item{the value of the vertex attribute for tie sender}
\item{the value of the vertex attribute for tie receiver}
\item{the status of the dyad, i.e. whether it is connected or not}
}
The two-dimensional version is a so-called "contact layer"
of the list version.

The mixing matrix is created for the \code{igraph} network in 
\code{object} based on vertex attributes supplied in arguments
\code{rattr} and, optionally, \code{cattr}.

If only \code{rattr} is specified (or, equivalently, \code{rattr} and
\code{cattr} are identical), the result will be a mixing matrix \eqn{G
\times G} if \code{full} is \code{FALSE} or \eqn{G \times G \times 2}{GxGx2}
if \code{full} is \code{TRUE}. Where \eqn{G} is the number of categories of
vertex attribute specified by \code{rattr}.

If \code{rattr} and \code{cattr} can be used to specify different vertex
attributes for tie sender and tie receiver.

It should be possible to convert the attribute for which the mixing matrix 
is to be determined into a factor, otherwise a mixing matrix is irrelevant. 
If this is not possible, the function will throw an appropriate error 
stating this.
}
\examples{
\dontrun{
data(judge_net, package = "SNA4DSData")

# only for connected dyads
mixing_igraph(judge_net, "JudgeSex")
mixing_igraph(judge_net, "DivisionCode")

# mixing matrices for connected and unconnected
# dyads seperately
mixing_igraph(judge_net, "JudgeSex", full = TRUE)
}
}
