% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create.R
\name{create_community_graph}
\alias{create_community_graph}
\title{Create a graph with a given community structure}
\usage{
create_community_graph(
  communitySizes = c(10, 20, 30),
  p_intra = c(0.3, 0.2, 0.3),
  p_inter = 0.2,
  p_del = 0,
  graph = c("igraph", "network", "matrix")
)
}
\arguments{
\item{communitySizes}{a vector, the number of communities equals the number 
of vertices in this vector.}

\item{p_intra}{a vector of probability of a vertex to be randomly linked to 
other vertices in the same community.}

\item{p_inter}{the probability of a vertex to be randomly linked to vertices 
in other communities.}

\item{p_del}{the proportion of links that are randomly deleted.}

\item{graph}{output class, either "igraph" (default), "network", or "matrix"}
}
\value{
a graph with the given community structure
}
\description{
Generates a random network with a probabilistic community structure
}
\details{
The researcher specifies the size of each community and the probabilities of 
vertices within each community. In addition, there is an overall probability 
of edges between vertices of different communities and a specified fraction of
edges is removed from the graph.

The internal code is largely based upon \code{\link[wfg]{network.simu}}, 
in the \pkg{wfg} package, which
implements simulation of networks under the framework by Girvan and Newman.
}
\examples{
create_community_graph(graph = "matrix")
create_community_graph(c(10, 10, 15), p_intra = c(.25, .35, .45),
    p_inter = .2, p_del = .2, graph = "network")
create_community_graph(c(30, 30, 30), p_intra = c(.4, .2, .15),
    p_inter = .4, p_del = .4)
\dontrun{
g <- create_community_graph(c(5, 5, 5), p_intra = c(.75, .75, .70),
    p_inter = .15, p_del = .2)
g$graph <- snafun::add_vertex_attributes(g$graph, "color", g$group)
snafun::plot(g$graph)
}
}
