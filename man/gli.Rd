% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g.R
\name{gli}
\alias{gli}
\alias{g_density}
\alias{g_mean_distance}
\title{Graph level indices}
\usage{
g_density(x, loops = FALSE)

g_mean_distance(x)
}
\arguments{
\item{x}{graph object}

\item{loops}{logical, should loops/diagonal be included? Default is \code{FALSE}.
This is almost always what you want.}
}
\description{
Graph level indices
}
\details{
Calculate several graph level indices.
}
\section{Functions}{
\itemize{
\item \code{g_density}: Density of a graph. Weights are discarded. 
Use \code{\link[sna]{gden}} if edge weights are to be used and \code{code} is 
a graph of class \code{network}.

\item \code{g_mean_distance}: Mean path distance
}}

\examples{
m <- matrix(rbinom(25, 1, 0.5), 5, 5)
diag(m) <- 0
g_density(snafun::to_network(m))
g_density(snafun::to_igraph(m))
# when loops matter
g <- igraph::graph( c(1,2, 2,2, 2,3) )
g_density(g, loops = FALSE)   # this is wrong, if loops matter
g_density(g, loops = TRUE)   # this is correct, if loops matter

g <- sna::rgraph(10, mode = "digraph")
g_n <- snafun::to_network(g)
g_mean_distance(g_n)
g_i <- snafun::to_igraph(g)
g_mean_distance(g_i)

g <- sna::rgraph(10, mode = "graph")
g_n <- snafun::to_network(g)
g_mean_distance(g_n)
g_i <- snafun::to_igraph(g)
g_mean_distance(g_i)
}
